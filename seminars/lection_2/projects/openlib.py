# Создание HTTP-запросов в Python


import requests # Импортируем нужные библиотеки. Open Library возвращает данные вформате JSON.
import json 
url = "http://openlibrary.org/search.json" # Определим конечную точку API и параметры для запроса API.

# Определим параметры для запроса API в виде словаря params. Параметры
# включают тему для поиска, которая задана как «Artificial intelligence», и
# количество получаемых результатов (то есть количество книг), равное 10

subject = "Artificial intelligence"
params = {
"subject": subject,
"limit": 10
}
#  Отправляем запрос API, используя метод requests.get.
response = requests.get(url, params=params)

# Проверим код состояния ответа, чтобы убедиться, что запрос API успешный.
# Если код 200, код печатает «Успешный запрос API!». Иначе выводит
# сообщение об ошибке с указанием кода статуса.

if response.status_code == 200:
    print("Успешный запрос API!")
else:
    print("Запрос API отклонен с кодом состояния:",
response.status_code)

# Переходим к парсингу данных JSON. Response.text в коде обозначает
# текстовое содержимое HTTP-ответа, возвращаемого API. Этот текст
# # представляет собой данные, возвращаемые API, в формате JSON.

data = json.loads(response.text)
# Строка data = json.loads(response.text) использует функцию json.loads из
# библиотеки json для парсинга строки JSON, содержащейся в response.text, в
# словарь Python. Таким образом, мы осуществляем парсинг JSON в словарь.
# Это нужно, чтобы в дальнейшем было легко манипулировать данными,
# возвращаемыми API, вместо того, чтобы работать с необработанной строкой
# JSON. С полученным словарем можно обращаться как с любым другим
# словарем Python с ключами и значениями.

books = data["docs"] # Код получает доступ к списку книг из данных ответа с помощью ключа "docs"
# и сохраняет его в переменной books.
for book in books:
    print("Title:", book["title"])
    print("Author:", book["author_name"])
    print("Subject:", book["subject"])
    print("\n") # Код использует цикл for для итерации по списку книг и печати названия,
# автора и темы для каждой книги
